apiVersion: automation.cloudbees.io/v1alpha1
kind: workflow
name: codeship test

on:
  workflow_dispatch:

jobs:
  test-rspec:
    services:
      postgres:
        image: postgres:16.8-alpine3.21
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
      redis:
        image: redis:7.4.2-alpine3.21
    steps:
      - name: checkout
        uses: cloudbees-io/checkout@v1
      - name: Run test pipeline
        uses: docker://cloudbees/basic-platform:0.0.272-rspec
        shell: bash
        run: |-
            . /etc/cloudbees.sh
            export GEM_HOME=$(pwd)/gems
            export NVM_DIR=$(pwd)/nvm
            echo $PATH

            if [ -f .ruby-version ]; then rvm use $(cat .ruby-version) --install; fi
            if [ -f .bundler-version ]; then gem install bundler -v $(cat .bundler-version); else gem install bundler; fi
            bundle install
            if [ -f .node-version ]; then nvm install $(cat .node-version); else nvm install 16.18.0; fi
            corepack enable
            corepack prepare yarn@stable --activate
            yarn set version stable
            yarn install
            export RAILS_ENV=test
            rm config/database.yml
            cp /etc/database.yml config/database.yml

            until pg_isready -h 127.0.0.1 -q; do
              echo "Waiting for database connection..."
              sleep 2
            done

            until redis-cli -h 127.0.0.1; do
              echo "Waiting for redis connection..."
              sleep 2
            done

            psql -h localhost -c "CREATE DATABASE test;"
            bundle exec rake db:schema:load
            npx webpack --config ./config/webpack/webpack.config.js
            DRIVER=$DRIVER bundle exec rspec