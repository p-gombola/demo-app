apiVersion: automation.cloudbees.io/v1alpha1
kind: workflow
name: max-reusable

on:
  workflow_dispatch:
    inputs:
      environment:
        type: string
        required: true

jobs:
  # rw-dynamic-env-input:
  #   uses: p-gombola/demo-app/.cloudbees/workflows/reusable-with-dynamic-environment.yaml
  #   secrets: inherit
  #   vars: inherit
  #   with:
  #     environment: ${{ inputs.environment }}

  rw-dynamic-env-var:
    env:
      JOB_VAR: pg-prod
    uses: p-gombola/demo-app/.cloudbees/workflows/reusable-with-dynamic-environment.yaml
    with:
      environment: pg-prod

  # rw-env-from-needs:
  #   outputs:
  #     environment: ${{ steps.environment.outputs.environment }}
  #   steps:
  #     - uses: docker://alpine:3.20
  #       id: environment
  #       run: |
  #         echo -n "${{ inputs.environment }}" > $CLOUDBEES_OUTPUTS/environment

  # rw-dynamic-env-needs:
  #   needs: [rw-dynamic-env-from-needs]
  #   uses: p-gombola/demo-app/.cloudbees/workflows/reusable-with-dynamic-environment.yaml
  #   with:
  #     environment: ${{ needs.rw-dynamic-env-needs.outputs.environment }}

  rw-mapped-secrets:
    uses: p-gombola/demo-app/.cloudbees/workflows/reusable-with-secrets-mapping.yaml
    secrets:
      super_secret: ${{ secrets.secret1 }}

  rw-dynamic-env-mapped-secrets:
    uses: p-gombola/demo-app/.cloudbees/workflows/reusable-with-dynamic-env-secrets-mapping.yaml
    secrets:
      env_only_secret_prop2: "override env secret from mapping"
      secret1: ${{ secrets.secret1 }}
    vars: inherit
    with:
      environment: pg-prod

  rw-mapped-undeclared-secret:
    uses: p-gombola/demo-app/.cloudbees/workflows/reusable-with-undeclared-secret.yaml
    secrets:
      mysecret: ${{ secrets.secret1 }}
 
  rw-using-global-secrets:
    uses: p-gombola/demo-app/.cloudbees/workflows/reusable-using-global-secrets.yaml
    secrets: inherit
    vars: inherit

  rw-using-env-var:
    env:
      APP_NAME: "demo-app"
    uses: p-gombola/demo-app/.cloudbees/workflows/reusable-using-env-var.yaml
    with:
      app_name: ${{ env.APP_NAME}}